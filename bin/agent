#!/usr/bin/env php
<?php

include_once __DIR__ . '/../vendor/autoload.php';

use Buzz\Browser;
use Buzz\Client\Curl;
use Endurance\GarminConnect\GarminConnectClient;
use Endurance\Strava\StravaClient;

$path = $_SERVER['HOME'] . '/.garmin-edge-agent';
$configPath = $path . '/config.json';
$logPath = $path . '/log';

if (!is_file($configPath)) {
    echo "The config.json file was not found. Have you created a copy of config.json.default?\n";
    exit(1);
}

$config = json_decode(file_get_contents($configPath), true);
if (!isset($config['lastActivity'])) {
    $config['lastActivity'] = 0;
}

function logInfo($file, $message) {
    file_put_contents($file, $message, FILE_APPEND);
    echo $message;
}

try {
    if (isset($config['garmin'])) {
        $garminClient = new GarminConnectClient(new Browser(new Curl()));
        $garminClient->signIn($config['garmin']['username'], $config['garmin']['password']);
    }

    if (isset($config['strava'])) {
        $stravaClient = new StravaClient(new Browser(new Curl()));
        $stravaClient->signIn($config['strava']['email'], $config['strava']['password']);
    }

    $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator('/Volumes/GARMIN/Garmin/Activities', RecursiveDirectoryIterator::SKIP_DOTS));
    foreach ($files as $file) {
        if ($file->getMTime() > $config['lastActivity']) {
            if (isset($config['garmin'])) {
                logInfo($logPath, sprintf('Uploading %s to Garmin Connect', $file->getFilename()));
                try {
                    $result = $garminClient->uploadActivity($file->getPathname());
                    if (isset($result['detailedImportResult']['failures']) && count($result['detailedImportResult']['failures']) > 0) {
                        logInfo($logPath, sprintf(' (Failed: "%s")', $result['detailedImportResult']['failures'][0]['messages'][0]['content']));
                    }
                } catch (\RuntimeException $exception) {
                    logInfo($logPath, sprintf(' (Failed: "%s")', $exception->getMessage()));
                }
                logInfo($logPath, "\n");
            }

            if (isset($config['strava'])) {
                logInfo($logPath, sprintf('Uploading %s to Strava', $file->getFilename()));
                try {
                    $result = $stravaClient->uploadActivity($file->getPathname());
                    if (isset($result[0]['id']) && !isset($result[0]['error'])) {
                        logInfo($logPath, sprintf(' (ID: %s)', $result[0]['id']));
                    } else {
                        logInfo($logPath, sprintf(' (Failed: "%s")', $result[0]['error']));
                    }
                } catch (\RuntimeException $exception) {
                    logInfo($logPath, sprintf(' (Failed: "%s")', $exception->getMessage()));
                }

                logInfo($logPath, "\n");
            }

            $config['lastActivity'] = $file->getMTime();
        }
    }

    file_put_contents($configPath, json_encode($config, JSON_FORCE_OBJECT));
} catch (RuntimeException $exception) {
    logInfo($logPath, sprintf("Error: %s\n", $exception->getMessage()));
    exit(1);
}
